!function(){var e=require("module").Module,r=e._nodeModulePaths,s=process.cwd(),n=r(s).filter(function(e){return-1===module.paths.indexOf(e)});require.main&&require.main.paths&&(require.main.paths=n.concat(require.main.paths)),e._nodeModulePaths=function(e){var s=r.call(this,e),o=n.filter(function(e){return-1===s.indexOf(e)});return s=s.concat(o)};var o=JSON.parse(process.env.jsRepl);if(process.argv[2]&&"dom"===process.argv[2]){var c,t=require("fs"),i=require("path").join(s,"package.json");if(t.existsSync(i))try{c=require(i).jsRepl}catch(e){process.send({type:"other",error:"no package.json"})}require(o.dom)(c)}process.on("disconnect",function(){process.exit()}),global["$console"+o.cvVar]=function(){var e,r=require("util").inspect,s=o.cvVar,n=[],c=[],t=!1;function i(e){if("string"==typeof e)return{message:e};if(e instanceof Error){var r={message:e.message,stack:e.stack,name:e.name};return Object.keys(e).forEach(function(s){r[s]=e[s]}),r}}function a(){process.send({type:"console",rels:c}),c=[],t=!0,process.send({type:"end",kind:"sync"}),o.test&&e.check(50).then(function(){process.send({type:"end",kind:"async"})})}return o.test&&(e=require(o.test)),{log:function(){var e=Array.prototype.slice.call(arguments),s=e.pop(),n={type:"console",line:e.pop(),values:r(e),rel:s};t?process.send(n):c.push(n)},error:function(e){process.send({type:"error",error:i(e)})},covLog:function(e){var r;if(r=global[s])if(n.length){if(n.length)if(e)process.send({type:"cov",covAsync:e});else{var o={};Object.keys(r).forEach(function(e){n.includes(e)||(o[e]=r[e],n.push(e))}),process.send({type:"cov",cov:o})}}else n=Object.keys(r),process.send({type:"cov",cov:r}),a();else a()},cov:function(e,r,s,o){n.length&&n.includes(o)&&this.covLog({type:e,id:r,index:s,rel:o})}}}()}();